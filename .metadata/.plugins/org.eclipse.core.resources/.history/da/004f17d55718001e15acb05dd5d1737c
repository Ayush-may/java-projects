
public class QuickSort {

	int block;
	int[] color; 
	Node[] node;
	int check = 0;
	int delay;

	QuickSort(Node node[],int color[], int block,int check,int delay){
		this.node = node;
		this.color = color;
		this.block = block;
		this.check = check;
		this.delay = delay;
	}
	
	 static int partition(int array[], int low, int high) {
		    
		    // choose the rightmost element as pivot
		    int pivot = array[high];
		    
		    // pointer for greater element
		    int i = (low - 1);

		    // traverse through all elements
		    // compare each element with pivot
		    for (int j = low; j < high; j++) {
		      if (array[j] <= pivot) {

		        i++;

		        int temp = array[i];
		        array[i] = array[j];
		        array[j] = temp;
		      }
		    }
		    int temp = array[i + 1];
		    array[i + 1] = array[high];
		    array[high] = temp;

		    return (i + 1);
		  }
	
}
